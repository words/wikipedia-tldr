{"version":3,"sources":["index.js"],"names":["fetch","require","URL","URLSearchParams","defaultUnwantedProps","lookup","query","locale","followRedirects","unwantedProps","url","params","body","pathname","encodeURIComponent","search","toString","res","then","ok","Error","statusText","json","err","Object","forEach","prop","text","trim","replace","html","assign","module","exports"],"mappings":";AAAA,MAAMA,EAAQC,QAAQ,eAChB,IAAEC,EAAF,gBAAOC,GAAoBF,QAAQ,OAEnCG,EAAuB,CAC3B,eACA,MACA,WACA,MACA,YACA,SACA,YACA,SACA,YAGF,eAAeC,EACbC,EACAC,EAAS,KACTC,GAAkB,EAClBC,EAAgBL,GAEVM,MAAAA,EAAM,IAAIR,aAAeK,mBACzBI,EAAS,CAAEH,gBAAAA,GAKbI,IAAAA,EAHJF,EAAIG,sCAAwCC,mBAAmBR,KAC/DI,EAAIK,OAAS,IAAIZ,EAAgBQ,GAAQK,WAIrC,IACIC,MAAAA,QAAYjB,EAAMU,GAAKQ,KAAKD,IAC5B,IAACA,EAAIE,GACDC,MAAAA,MAAMH,EAAII,YAEXJ,OAAAA,IAETL,QAAaK,EAAIK,OACjB,MAAOC,GACA,OAAA,KAeFC,OAZPf,EAAcgB,QAAQC,WACbd,EAAKc,KAGVd,EAAKe,OACPf,EAAKe,KAAOf,EAAKe,KACdC,OACAC,QAAQ,WAAY,KAGrBjB,EAAKkB,OAAMlB,EAAKkB,KAAOlB,EAAKkB,KAAKF,QAE9BJ,OAAOO,OAAO,GAAI,CAAEzB,MAAOA,GAASM,GAG7CoB,OAAOC,QAAU5B","file":"index.js","sourceRoot":"..","sourcesContent":["const fetch = require('node-fetch')\nconst { URL, URLSearchParams } = require('url')\n\nconst defaultUnwantedProps = [\n  'content_urls',\n  'dir',\n  'revision',\n  'tid',\n  'timestamp',\n  'pageid',\n  'namespace',\n  'titles',\n  'api_urls'\n]\n\nasync function lookup (\n  query, \n  locale = 'en', \n  followRedirects = false,\n  unwantedProps = defaultUnwantedProps,\n) {\n  const url = new URL(`https://${locale}.wikipedia.org`)\n  const params = { followRedirects }\n\n  url.pathname = `/api/rest_v1/page/summary/${encodeURIComponent(query)}`\n  url.search = new URLSearchParams(params).toString()\n\n  let body\n\n  try {\n    const res = await fetch(url).then(res => {\n      if (!res.ok) {\n        throw Error(res.statusText)\n      }\n      return res\n    })\n    body = await res.json()\n  } catch (err) {\n    return null\n  }\n\n  unwantedProps.forEach(prop => {\n    delete body[prop]\n  })\n\n  if (body.text) {\n    body.text = body.text\n      .trim()\n      .replace(/\\[\\d+\\]/g, '')\n  } // remove footnotes like [1]\n\n  if (body.html) body.html = body.html.trim()\n\n  return Object.assign({}, { query: query }, body)\n}\n\nmodule.exports = lookup\n"]}