{"version":3,"sources":["index.js"],"names":["fetch","require","URL","URLSearchParams","unwantedProps","lookup","query","locale","followRedirects","url","params","pathname","encodeURIComponent","search","toString","body","res","then","ok","Error","statusText","json","err","forEach","prop","text","trim","replace","html","Object","assign","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,MAAM;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,IAA2BF,OAAO,CAAC,KAAD,CAAxC;;AAEA,MAAMG,aAAa,GAAG,CACpB,cADoB,EAEpB,KAFoB,EAGpB,UAHoB,EAIpB,KAJoB,EAKpB,WALoB,EAMpB,QANoB,EAOpB,WAPoB,EAQpB,QARoB,EASpB,UAToB,CAAtB;;AAYA,eAAeC,MAAf,CACEC,KADF,EAEEC,MAAM,GAAG,IAFX,EAGEC,eAAe,GAAG,KAHpB,EAIEJ,aAAa,GAAGA,aAJlB,EAKE;AACA,QAAMK,GAAG,GAAG,IAAIP,GAAJ,CAAS,WAAUK,MAAO,gBAA1B,CAAZ;AACA,QAAMG,MAAM,GAAG;AAAEF,IAAAA;AAAF,GAAf;AAEAC,EAAAA,GAAG,CAACE,QAAJ,GAAgB,6BAA4BC,kBAAkB,CAACN,KAAD,CAAQ,EAAtE;AACAG,EAAAA,GAAG,CAACI,MAAJ,GAAa,IAAIV,eAAJ,CAAoBO,MAApB,EAA4BI,QAA5B,EAAb;AAEA,MAAIC,IAAJ;;AAEA,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACS,GAAD,CAAL,CAAWQ,IAAX,CAAgBD,GAAG,IAAI;AACvC,UAAI,CAACA,GAAG,CAACE,EAAT,EAAa;AACX,cAAMC,KAAK,CAACH,GAAG,CAACI,UAAL,CAAX;AACD;;AACD,aAAOJ,GAAP;AACD,KALiB,CAAlB;AAMAD,IAAAA,IAAI,GAAG,MAAMC,GAAG,CAACK,IAAJ,EAAb;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,WAAO,IAAP;AACD;;AAEDlB,EAAAA,aAAa,CAACmB,OAAd,CAAsBC,IAAI,IAAI;AAC5B,WAAOT,IAAI,CAACS,IAAD,CAAX;AACD,GAFD;;AAIA,MAAIT,IAAI,CAACU,IAAT,EAAe;AACbV,IAAAA,IAAI,CAACU,IAAL,GAAYV,IAAI,CAACU,IAAL,CACTC,IADS,GAETC,OAFS,CAED,UAFC,EAEW,EAFX,CAAZ;AAGD,GA7BD,CA6BE;;;AAEF,MAAIZ,IAAI,CAACa,IAAT,EAAeb,IAAI,CAACa,IAAL,GAAYb,IAAI,CAACa,IAAL,CAAUF,IAAV,EAAZ;AAEf,SAAOG,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAAExB,IAAAA,KAAK,EAAEA;AAAT,GAAlB,EAAoCS,IAApC,CAAP;AACD;;AAEDgB,MAAM,CAACC,OAAP,GAAiB3B,MAAjB","file":"index.js","sourceRoot":"..","sourcesContent":["const fetch = require('node-fetch')\nconst { URL, URLSearchParams } = require('url')\n\nconst unwantedProps = [\n  'content_urls',\n  'dir',\n  'revision',\n  'tid',\n  'timestamp',\n  'pageid',\n  'namespace',\n  'titles',\n  'api_urls'\n]\n\nasync function lookup (\n  query, \n  locale = 'en', \n  followRedirects = false,\n  unwantedProps = unwantedProps,\n) {\n  const url = new URL(`https://${locale}.wikipedia.org`)\n  const params = { followRedirects }\n\n  url.pathname = `/api/rest_v1/page/summary/${encodeURIComponent(query)}`\n  url.search = new URLSearchParams(params).toString()\n\n  let body\n\n  try {\n    const res = await fetch(url).then(res => {\n      if (!res.ok) {\n        throw Error(res.statusText)\n      }\n      return res\n    })\n    body = await res.json()\n  } catch (err) {\n    return null\n  }\n\n  unwantedProps.forEach(prop => {\n    delete body[prop]\n  })\n\n  if (body.text) {\n    body.text = body.text\n      .trim()\n      .replace(/\\[\\d+\\]/g, '')\n  } // remove footnotes like [1]\n\n  if (body.html) body.html = body.html.trim()\n\n  return Object.assign({}, { query: query }, body)\n}\n\nmodule.exports = lookup\n"]}